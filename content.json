{"meta":{"title":"Interstellar","subtitle":null,"description":null,"author":"Craigie","url":"https://craiiiigie.github.io"},"pages":[{"title":"Categories","date":"2017-03-28T07:17:43.760Z","updated":"2017-02-07T08:06:44.000Z","comments":true,"path":"categories/index.html","permalink":"https://craiiiigie.github.io/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2017-03-28T07:17:43.744Z","updated":"2017-02-07T08:06:44.000Z","comments":true,"path":"about/index.html","permalink":"https://craiiiigie.github.io/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-03-28T07:17:43.775Z","updated":"2017-02-07T08:06:44.000Z","comments":true,"path":"tags/index.html","permalink":"https://craiiiigie.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"我是如何使用Hexo+GitHub搭建博客的","slug":"HowToSetBlog","date":"2017-04-12T02:45:35.000Z","updated":"2017-04-12T03:16:28.662Z","comments":true,"path":"2017/04/12/HowToSetBlog/","link":"","permalink":"https://craiiiigie.github.io/2017/04/12/HowToSetBlog/","excerpt":"分享一下建站的过程吧！","text":"分享一下建站的过程吧！ 博客搭建好之后因为工作的事情，闲置了有一个月了，之前搭建时候踩过的坑都有点忘记了，加上最近单位给配置了新电脑，家里也换成了MAC，正好来结合换环境的问题介绍一下我搭建博客的过程吧。 搭建的时候，使用的是单位的电脑，还是win7系统，搭建博客的方法是GitHub-Pages+Hexo，后来单位更换新电脑后没有大问题也部署成功了，家里的MAC还没开始部署，不过应该都差不多，具体操作后续我会更新出来。 其实整体的流程都很简单，只要花点时间就行： 创建GH-Pages首先你需要有一个GitHub的账号，去官网注册 然后你需要创建一个repo，注意：repo的名字格式必须是 yourusername.github.io，例如： 安装Hexo因为Hexo是基于node.js的博客，所以你需要先安装node.js，墙裂建议下载离线版，因为官网下载真的十分感人 安装GitHub客户端，同样墙裂建议下载离线版（有的教程使用的是git bash，也可以借鉴）打开git shell（类似于cmd或是terminal）使用cd命令进入到你的目标文件夹内安装hexo123$ npm install -g hexo-cli$ npm install hexo --save$ hexo init /*初始化*/ 初始化之后，目标文件夹内应该就出现了hexo生成的文件，然后键入12$ hexo g$ hexo s 然后在浏览器内输入localhost:4000理论上就可以看到页面了(PS：hexo s是本地测试指令，其他指令可自己查询) 关联GH-Pages如果走到上述步骤了发现不能打开页面的话，可能是因为要先关联GitHub（我也忘了） 首先要进入到你的Hexo博客目录里找到配置文件_config.yml，然后翻到最下面添加或修改配置信息123456deploy: type: git repository: github: git@github.com:craiiiigie/craiiiigie.github.io //部署在github上的repo coding: git@git.coding.net:craigie/craigie.git //部署在coding上的repo branch: master //对应分支 我为了提高网站的访问速度，在coding上也部署了同样的项目，方便国内访问，如果没有在coding上部署，只需要填GitHub的repo即可 然后用git shell或者其他终端进入到你的博客目录敲入以下指令123hexo clean hexo g //generatehexo d //deploy 具体指令的含义大概就是生成然后部署，具体可以参照官网文档 如果没有出现报错，那么你的博客已经可以访问了，地址是1craiiiigie.github.io //格式是'yourname.github.io' 如果出现了错误，先不要着急，终端里面会有相关的错误信息，根据他的提示Google一下很容易解决的 关于主题Hexo有很多酷炫的主题，当初我也是被这个所吸引的，自己可以去GitHub上找自己心仪的主题，或是自己编写修改自己的主题。我使用的主题是Icarus，还有一些比较流行的比如Next等，很多都是国人自己写的（但是说明好像都是英文），主题里一般有详尽的文档，包括如何安装配置，集成了哪些插件等，如果有在文档里没法解决的问题，也可以去issue里提问寻求作者的帮助，他们也会希望自己的主题更加完善吧 关于域名自己的博客肯定也想配一个喜欢的域名，这点也不多说，先去万网购买一个域名，然后需要与GH-Pages进行绑定。首先在你的博客目录里的source文件夹内添加一个文件CNAME文件，不需要后缀！，在里面添加你的域名信息，不需要http://！，如： 然后去DNSPOD注册账号后添加域名解析，如： 注：因为我同时部署了coding和GitHub所以域名解析的参数仅供参考 其他关于同时部署的问题：部署在国内的coding上，的确是加快了访问速度，具体可以参考http://shomy.top/2016/03/03/hexo-in-coding-github/ 关于CDN加速域名：需要认证备案的域名，备案的前提是有国内的服务器，所以就没去折腾，多金的少爷可以考虑一下阿里云的vps 关于https：没有实际的意义，可以让自己的域名更加有逼格（大概，具体可以参考https://www.tiexo.cn/https/ 关于更新文章：hexo更新文章很方便，文章以markdown的语法编写保存，具体的语法和新建文章方式可以查看文档或Google，另外好像有插件可以支持后台更新文章，有兴趣的童鞋可以去了解一下 最后，搭建博客的过程中参考其他大佬的博客或者文章是很必要的，坦白的说，除了搭建的教程，也学习了很多其他之前没有接触过的知识，收获很多，总之，遇到问题了反而是件好事，折腾的过程中，反而更有利于掌握技巧。","categories":[],"tags":[{"name":"技术交流","slug":"技术交流","permalink":"https://craiiiigie.github.io/tags/技术交流/"}]},{"title":"Interstellar","slug":"Interstellar","date":"2017-02-21T07:45:35.000Z","updated":"2017-03-08T00:45:28.000Z","comments":true,"path":"2017/02/21/Interstellar/","link":"","permalink":"https://craiiiigie.github.io/2017/02/21/Interstellar/","excerpt":"这是第一篇正儿八经的博文！","text":"这是第一篇正儿八经的博文！ 去年从FCC入门前端后，就想着搭一个自己的个人博客，一是记录下平时学到的小技巧，二来也可以把前端知识用在这里练练手，然后十二月的时候先是申请了GH-PAGES，心中绘制了无比巨大的蓝图巨大到我画满了好几张A4纸…然后由于年前的忙碌，渐渐变成了放置play了，然后，就没有然后了… 年后偶然发现了别人用hexo+gh搭建的博客，简约酷炫（后来知道是非常流行的Next主题），回头看了下GH-PAGES默认的主题，随手我就删掉了repo… 关于具体搭建的步骤，我后面会再写一篇详细介绍，也不是为了啥 就是为了装B咋滴 就是自己记录一下过程，万一哪天忘记过程了 就没法装B了 Murphy’s law doesn’t mean that something bad will happen. It means that whatever can happen, will happen. 我也不知道为什么空间的名字就成了interstellar，域名就带了interstellar，第一篇博文就叫interstellar，我想大概只是因为我重复看了太多遍interstellar，我也不知道为什么，大概是因为interstellar是星际主题的科幻电影里拍的最真实的电影吧（我瞎说的）所以当我想是时候装一波有文化有思想的时候就会拿出它的名号 不过话说回来，interstellar的确是一部超棒的电影，然鹅我并不是个很懂电影的人，并不能说出拍摄怎样怎样，音乐怎样怎样，但是如果你没看过它，那不用多想我就会推荐你现在就去看一遍。我不是很擅长安利，也不太会总结什么故事剧情了，至于评价如何什么的，可以转战去看豆瓣评论娱乐娱乐，至于电影嘛，Just enjoy it. 反正IMDb是这样说的 Interstellar (2014) - IMDb 这篇电影安利文(误)废话了这么多差不多也该完结了，还是想把这里做成一个技术博客，记录一下遇过的坑，当做一个记学习笔记的地方吧！ 如果有人发现了这个小角落愿意互换友链那真是非常非常欢迎的！","categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"https://craiiiigie.github.io/tags/博客/"}]},{"title":"Hello World","slug":"HelloWorld","date":"2017-02-07T09:03:40.000Z","updated":"2017-03-09T02:07:30.000Z","comments":true,"path":"2017/02/07/HelloWorld/","link":"","permalink":"https://craiiiigie.github.io/2017/02/07/HelloWorld/","excerpt":"终于有自己的博客了！","text":"终于有自己的博客了！ 花了好几天的时间终于用hexo+github搭建了自己的blog 这篇文章暂时用来测试各种插件以及md语法 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=\"text/javascript\"&gt; function() &#123; var ds = document.createElement('script'); ds.type = 'text/javascript';ds.async = true; ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js'; ds.charset = 'UTF-8'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ds); &#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; Hello World&lt;/body&gt;&lt;/html&gt; 也暂时记录一下我的修改路程 [x] 搭建blog [x] 添加多说评论 [x] 添加网易云音乐 [x] 添加nest背景效果 [x] 修改profile和logo部分样式 [x] 弃用主题分享插件，使用多说分享插件 [x] 调整nest设置 [x] 调整设置了多说分享插件的参数问题 [x] 修改多说评论样式 [x] 解决多说分享undefined的问题 [x] 设置多说UA失败，百度分享测试环境时成功部署后不显示 [x] 找出了百度分享失败的原因，gh-pages默认域名强制https导致百度分享无法使用 [x] 万网购买域名，更改dns（dnspod），解决强制https问题 [x] 多说UA可以使用了，分享改成了bdshare [x] 了解了设置文章banner，接下来解决图床问题 [x] 使用gulp压缩静态资源 [x] 七牛加速域名需要备案，推迟计划，先使用云存储加速图片 [x] 项目部署到coding，加速国内访问 [x] 更改了dns解析，现在变成了https，加了 Let’s Encrypt证书 [x] 取消了https，原因会有各种不兼容，GTMDHTTPS [x] 使用七牛图片处理，转换成WebP格式，高质量压缩图片大小 [*] 练习md语法","categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"https://craiiiigie.github.io/tags/博客/"},{"name":"测试","slug":"测试","permalink":"https://craiiiigie.github.io/tags/测试/"}]}]}